[{"content":"## Welcome to RTLBook\n\nThis is an interactive coding environment where you can explore the following libraries:\n\n| Name      | Docs |\n| ----------- | ----------- |\n| React      | [docs](https://reactjs.org/)       |\n| @testing-library/react   |  [docs](https://testing-library.com/docs/react-testing-library/intro/)        |\n| @testing-library/user-event |   [docs](https://testing-library.com/docs/user-event/intro)  |\n| @testing-library/react-hooks |  [docs](https://github.com/testing-library/react-hooks-testing-library)  |\n| @testing-library/jest-dom | [docs](https://github.com/testing-library/jest-dom#custom-matchers) |\n| expect |  [docs](https://jestjs.io/docs/expect)  |\n\nIn between each 'cell' there are buttons that can add in a new code editor or a text section.","type":"text","id":"12frm"},{"content":"import { render, screen } from '@testing-library/react';\nimport { useState, useEffect } from 'react';\n\nfunction DataForm() {\n  const [email, setEmail] = useState('sandeep@sandeep.com');\n\n  return (\n    <form>\n      <h3>Enter Data</h3>\n      <div data-testid='image wrapper'>\n        <img alt=\"data\" src=\"data.jpg\" />\n      </div>\n      <label htmlFor=\"email\">Email</label>\n      <input \n        id=\"email\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <label htmlFor=\"color\">Color</label>\n      <input id=\"color\" placeholder=\"Red\" />\n      <button title=\"click when you are ready\" >\n      Submit\n      </button>\n    </form>\n  )\n}\n\nrender(<DataForm />)","type":"code","id":"kd2aj"},{"content":"test('fetching all the above elements', () => {\n  render(<DataForm />)\n  const elements = [\n    screen.getByRole('button'),\n    screen.getByText(/enter data/i),\n\n    screen.getByLabelText(/email/i),\n    screen.getByPlaceholderText(/red/i),\n    screen.getByTitle(/click when you are ready/i),\n    screen.getByTestId(/image wrapper/i),\n    screen.getByAltText(/data/i),\n    screen.getByDisplayValue(/sandeep@sandeep.com/i),\n  ]\n\n  for(let el of elements) {\n    expect(el).toBeInTheDocument();\n  }\n})","type":"code","id":"3iqfg"},{"content":"import { screen, render, within } from '@testing-library/react';\n\nfunction FormData(){\n  return (\n    <div>\n    <button>Go Back</button>\n      <form aria-label='form'>\n        <button>Submit</button>\n        <button>Cancel</button>\n      </form>\n    </div>\n  )\n}\n\nrender(<FormData />)","type":"code","id":"v93zf"},{"content":"function toContainRole(container, role, quantity = 1) {\n  const elements = within(container).queryAllByRole(role);\n  if(elements.length == quantity){\n    return {\n      pass: true,\n    }\n  }\n  return {\n    pass: false,\n    message: () => `${container} do not contains ${quantity} ${role}`,\n  }\n}\n\nexpect.extend({ toContainRole });","type":"code","id":"qcw1j"},{"content":"test(\"test form having 2 buttons\", () => {\n  render(<FormData />);\n\n  const form = screen.getByRole('form');\n\n  // const buttons = within(form).getAllByRole('button');\n\n  // expect(buttons).toHaveLength(2);\n  expect(form).toContainRole('button', 2);\n\n})","type":"code","id":"r37dg"}]